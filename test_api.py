"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import requests
import json
import time
from typing import Dict, Any

BASE_URL = "http://localhost:8000"

def test_api_endpoint(method: str, endpoint: str, data: Dict[Any, Any] = None) -> Dict[Any, Any]:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    
    Args:
        method: HTTP –º–µ—Ç–æ–¥ (GET, POST, PUT)
        endpoint: –ü—É—Ç—å –∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç—É
        data: –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–¥–ª—è POST/PUT)
        
    Returns:
        Dict —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∑–∞–ø—Ä–æ—Å–∞
    """
    url = f"{BASE_URL}{endpoint}"
    
    try:
        if method.upper() == "GET":
            response = requests.get(url)
        elif method.upper() == "POST":
            response = requests.post(url, json=data)
        elif method.upper() == "PUT":
            response = requests.put(url, json=data)
        else:
            return {"error": f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥: {method}"}
        
        return {
            "status_code": response.status_code,
            "data": response.json() if response.content else None,
            "success": response.status_code < 400
        }
        
    except requests.exceptions.ConnectionError:
        return {"error": "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000"}
    except Exception as e:
        return {"error": f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}"}

def print_result(test_name: str, result: Dict[Any, Any]):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞"""
    print(f"\n{'='*50}")
    print(f"–¢–ï–°–¢: {test_name}")
    print(f"{'='*50}")
    
    if "error" in result:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {result['error']}")
        return
    
    status = "‚úÖ –£–°–ü–ï–•" if result["success"] else "‚ùå –û–®–ò–ë–ö–ê"
    print(f"–°—Ç–∞—Ç—É—Å: {status} ({result['status_code']})")
    
    if result["data"]:
        print("–û—Ç–≤–µ—Ç:")
        print(json.dumps(result["data"], indent=2, ensure_ascii=False))

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í API")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: uvicorn app:app --reload")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± API
    result = test_api_endpoint("GET", "/")
    print_result("–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± API", result)
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫)
    result = test_api_endpoint("GET", "/users")
    print_result("–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", result)
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        "sub_id": 987654321,
        "email": "testuser@example.com"
    }
    result = test_api_endpoint("POST", "/users/123456789", user_data)
    print_result("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", result)
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = test_api_endpoint("GET", "/users/123456789")
    print_result("–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID", result)
    
    # –¢–µ—Å—Ç 5: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–±-–∞–∫–∫–∞—É–Ω—Ç–∞
    sub_data = {
        "new_sub_id": 444555666
    }
    result = test_api_endpoint("PUT", "/users/123456789/sub-accounts", sub_data)
    print_result("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–±-–∞–∫–∫–∞—É–Ω—Ç–∞", result)
    
    # –¢–µ—Å—Ç 6: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ email
    email_data = {
        "email": "newemail@example.com"
    }
    result = test_api_endpoint("PUT", "/users/123456789/email", email_data)
    print_result("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ email", result)
    
    # –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = test_api_endpoint("GET", "/users/123456789")
    print_result("–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", result)
    
    # –¢–µ—Å—Ç 8: –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data2 = {
        "sub_id": 111222333,
        "email": "user2@example.com"
    }
    result = test_api_endpoint("POST", "/users/987654321", user_data2)
    print_result("–°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", result)
    
    # –¢–µ—Å—Ç 9: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    result = test_api_endpoint("GET", "/users")
    print_result("–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è)", result)
    
    # –¢–µ—Å—Ç 10: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID
    user_data3 = {
        "sub_id": 999888777,
        "email": "duplicate@example.com"
    }
    result = test_api_endpoint("POST", "/users/123456789", user_data3)
    print_result("–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", result)
    
    # –¢–µ—Å—Ç 11: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = test_api_endpoint("GET", "/users/999999999")
    print_result("–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", result)
    
    # –¢–µ—Å—Ç 12: Legacy —ç–Ω–¥–ø–æ–∏–Ω—Ç - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = test_api_endpoint("GET", "/user/123456789")
    print_result("Legacy –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", result)
    
    # –¢–µ—Å—Ç 13: Legacy —ç–Ω–¥–ø–æ–∏–Ω—Ç - —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = test_api_endpoint("POST", "/user-create/555666777")
    print_result("Legacy —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", result)
    
    # –¢–µ—Å—Ç 14: –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã (–∑–∞–≥–ª—É—à–∫–∞)
    result = test_api_endpoint("POST", "/user/123456789/cards")
    print_result("–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã (–∑–∞–≥–ª—É—à–∫–∞)", result)
    
    # –¢–µ—Å—Ç 15: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç (–∑–∞–≥–ª—É—à–∫–∞)
    result = test_api_endpoint("GET", "/user/123456789/cards")
    print_result("–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç (–∑–∞–≥–ª—É—à–∫–∞)", result)
    
    print(f"\n{'='*50}")
    print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print(f"{'='*50}")

def test_error_scenarios():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –æ—à–∏–±–æ–∫"""
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–¶–ï–ù–ê–†–ò–ï–í –û–®–ò–ë–û–ö")
    
    # –¢–µ—Å—Ç 1: –ù–µ–≤–µ—Ä–Ω—ã–π JSON
    try:
        response = requests.post(
            f"{BASE_URL}/users/888999000",
            data="invalid json",
            headers={"Content-Type": "application/json"}
        )
        print(f"\n–ù–µ–≤–µ—Ä–Ω—ã–π JSON: {response.status_code}")
    except Exception as e:
        print(f"\n–ù–µ–≤–µ—Ä–Ω—ã–π JSON: {e}")
    
    # –¢–µ—Å—Ç 2: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è
    incomplete_data = {"sub_id": 123456789}  # –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç email (–Ω–æ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)
    result = test_api_endpoint("POST", "/users/777888999", incomplete_data)
    print_result("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ email", result)
    
    # –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å—É–±-–∞–∫–∫–∞—É–Ω—Ç–∞
    sub_data = {"new_sub_id": 987654321}  # –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    result = test_api_endpoint("PUT", "/users/123456789/sub-accounts", sub_data)
    print_result("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å—É–±-–∞–∫–∫–∞—É–Ω—Ç–∞", result)

if __name__ == "__main__":
    print("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: uvicorn app:app --reload")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã: python test_api.py")
    print("\n" + "="*60 + "\n")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
    main()
    
    # –¢–µ—Å—Ç—ã –æ—à–∏–±–æ–∫
    test_error_scenarios()
    
    print("\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    print("- –û—à–∏–±–∫–∏ 404 –∏ 409 —è–≤–ª—è—é—Ç—Å—è –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
    print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–ª–∞ —Ç–∞–±–ª–∏—Ü—ã –∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞ –¥–∞–Ω–Ω—ã–µ")
    print("\nüåê –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/docs")

